let express,cors,productRoute,errorMiddleware,userRoute,cookieParser,bodyParser,orderRoute;_39a‍.x([["default",()=>_39a‍.o]]);_39a‍.w("express",[["default",["express"],function(v){express=v}]]);_39a‍.w("cors",[["default",["cors"],function(v){cors=v}]]);_39a‍.w("../routes/productRoutes",[["default",["productRoute"],function(v){productRoute=v}]]);_39a‍.w("../middleware/error",[["errorMiddleware",["errorMiddleware"],function(v){errorMiddleware=v}]]);_39a‍.w("../routes/userRoutes",[["default",["userRoute"],function(v){userRoute=v}]]);_39a‍.w("cookie-parser",[["default",["cookieParser"],function(v){cookieParser=v}]]);_39a‍.w("body-parser",[["default",["bodyParser"],function(v){bodyParser=v}]]);_39a‍.w("../routes/orderRoutes",[["default",["orderRoute"],function(v){orderRoute=v}]]);







const App = express();

App.use(
  bodyParser.urlencoded({
    extended: true
  })
);
App.use(
  cors({
    origin: "*"
  })
);
App.use(cookieParser());
App.use(express.json());

// All Routes
App.use(userRoute);
App.use(productRoute);
App.use(orderRoute);

// Middleware For Error
App.use(errorMiddleware);

_39a‍.d(App);
